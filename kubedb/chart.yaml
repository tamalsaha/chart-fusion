---
# Source: kubedb/templates/operator-psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: kubedb
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: true  #Allowing privileged pods is necessary for ES db
  allowPrivilegeEscalation: true #Allowing privilege escalation is necessary for ES db
  volumes:
  - "*"
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE
---
# Source: kubedb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubedb
  namespace: default
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubedb-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQU1yaTZrU3NNbWdCR0xzWWF4RHkxN293RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpBeE1URTFNak14TURNNVdoY05NekF4TVRFek1qTXhNRE01V2pBUgpNUTh3RFFZRFZRUURFd1pyZFdKbFpHSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCCkFRRERUWFRlbVJxNWoyaXk0V0NpRW9KZ1BiZFUxTXdLeXVoZmZEeVdDTlRmOEtETjFoUWxWZjd0ZGduNnAxTDYKWWR2N0ZBUEFjRVUwdyszRlg5V0J5aWtwUWFKYzZEc1Z0MzlwdU90aE4vL1QyMEVhQTFSWmlmeTNvOXc3aFNsOApKV0ZNa0RMZHRTWDZMTWpINXRJNkJ2QWV3TmdYZXFxNHd5SHo0b3JKYnEwTFduaXpCQm43T3FBTHBEWVFEUWFqClRJWEFrOWNNdTRTUnhxc3lhTG9tR0hlZXpPUUlMR0hNT0xQZ2hXbnpCU1JMNThXaHdkNVhzNVdyakQ2TXViTUgKZ0RnNGVpYnVkRkZ6SGZZR29qbkpjMjNCMy9QaXRjQnM2MzUvVlc4azZCNkwzSXVKWTdqbGorTzF1Z2REQ3o3cQpJWUxmcjlZV0RsUFJKajV1Z3ljWGZwazlBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WCkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREF0QmdOVkhSRUUKSmpBa2dnNXJkV0psWkdJdVpHVm1ZWFZzZElJU2EzVmlaV1JpTG1SbFptRjFiSFF1YzNaak1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUE1dWU0MmN6eGpHTWhhUVdxR2lRQUdxSWxkVTNOeHkyRTUvZjZmUEdKSlBJS20yZGVLCk4xckx4NGNKQmkxeEdMRlR1anRpNGhacWVCbm5rblJtdW5JVU9BdDJGUTdmaW0vTkt3eGVneE9kSHpNMVN5ZDIKeUFpeVIxaFVUTEFZelY0cW1Bb3Zla0hZZkZTTUl5aGRjN0RtVHlhTm03eHlueHVERjlKZklTR2cwN3o5d1MzSApNY2RmUDVzQXdIeUhCT0NRajFFOTBsYXVMZm5QamQwQzU3cm5TNVlUYm1nQTcxSEpQcUJDc3hEVzlXTFJZNEE4CjZtQXc3ZmVYcFRUZU02RXVyaHFMemVqcjhnMWtVRVBESXdIWGRtaU04bWR5aC9ScllpR1V1eTFBaStWUk5meSsKenMzUk9PakVZWDg5TkZyYkpqdDBUV3NDN3M5VTRXdlZEWFhUCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzAxMDNwa2F1WTlvc3VGZ29oS0NZRDIzVk5UTUNzcm9YM3c4bGdqVTMvQ2d6ZFlVCkpWWCs3WFlKK3FkUyttSGIreFFEd0hCRk5NUHR4Vi9WZ2NvcEtVR2lYT2c3RmJkL2FianJZVGYvMDl0QkdnTlUKV1luOHQ2UGNPNFVwZkNWaFRKQXkzYlVsK2l6SXgrYlNPZ2J3SHNEWUYzcXF1TU1oOCtLS3lXNnRDMXA0c3dRWgorenFnQzZRMkVBMEdvMHlGd0pQWERMdUVrY2FyTW1pNkpoaDNuc3prQ0N4aHpEaXo0SVZwOHdVa1MrZkZvY0hlClY3T1ZxNHcrakxtekI0QTRPSG9tN25SUmN4MzJCcUk1eVhOdHdkL3o0clhBYk90K2YxVnZKT2dlaTl5TGlXTzQKNVkvanRib0hRd3MrNmlHQzM2L1dGZzVUMFNZK2JvTW5GMzZaUFFJREFRQUJBb0lCQVFDOTZXUHIwUldidTBnawpLZVM5dFNIeVZCRWgvSXN0TTRJaTE3eFNhT1FYbnZXL01wMEVjVXNqdmRTV1dIN24ycUQrMWNlUUtad2lZeU9pCitqMnpwOUcrdklRVnMvMUFjTjhFL3p4am5RQzRFa3lMN3hEbXdMZHVHM2pjcC9CZk9Eb1ZLV05ORkFtSjdHS1IKZ0hLTTJwSkVWV0hMOHd4di9jL1dTRVNNKzRKcHRpMFBRZEZ3MDNkUEcrR25SMHpuSFZRWE5ZL3hwa25tYzk2aApyZ2NrWFM5UWZvNUJyazJuaU83SkdCNDBqRFRManpPMFNrZHRtcXZZc0QxNHJHWVpjQ0liSW50L1FiaXRyOHROCk9sNnMzbjh5eWtOZzBwckgxVnlQQk9ubVhMYTBvcy94NzVqZjRrSDJwNXUrV1dJcEsyRTBjcytUZkRmSnpFUGQKNThWWFhDeEJBb0dCQU9TbUlHTHZCSllCZXAyT1NlWWZ2RTczUGhpeDlQdUJQYUMydXJ4emhDR0V1LzRHWmJ5Rwo1QUFpVFN4Y3VUOWZISzZQcUV6QVFZVVQ0bGl3S3hCNUd4U0NaVVlycnVSTW81VTN5Q1FXTmc1SG9BdDV3Sm1rCkc5bDMxU05FNXB0NTJhY0NnS2I3TllWSmhCZFdybnZNWFFaOUJKN0crbzc1bXVKMzlJS1FPUWZmQW9HQkFOcXEKSzZKRzMyNDdNS21udGpENVpqTFkrcE5UcmpHYUZyNHJLS2N0SVllWittaHFqaFovSm5iZVE2YmhRdXc0amltQQp5VThKaGFGU2RRcGxyU3R2UXdkQjIzU1ZCUmJWZGJiaHViVWgvbWFyeENoQXcwc09qQUw2by84V2F6QllhcHgxCkprR2JzOFB3UU9zVU1PMERHcUp2a2xOLzRLQmYrdUh1aW1NNitUSmpBb0dBQW1vT3BYekltNXpnWXBHQ0RqLy8KaVFYclRlOXpHc1MrbGRmWUdPMVBVOXRHOE9PNFowazFWeHNGblpaTkRuSStwMGsxQ2JwdDlxM0RFaFNxSDc1bgpuc3ZScmZBQUpNRDZhVFR4bEEvMytpYWZkZitQSFJBeWl4Vk0xdFovYU56Y2czcnZTTlFXT0pZU0l2enpVck5SCnVDUFJ6S3RsTWVWSTBXTmEzWllRUkJrQ2dZQU5tS1VyNnZJN25XeVNMLzV4SHlET3FwVXlFZkx6M0p2cmFTMlcKNzRSMU5RclA4VWd5ZCtlQlhxS2dQc04xZ3JLOE8rakloRlFOeXQzQ0xyNU14QmRMM1RsekQwMEl0VzhqVnZmQQpIb1ArQ0ZJakdwdktEL1ordk96emtJWkx0RU8weE1nRExsWklLYWt2dE1xeUFnNW02VDhVK0ErVWlVTkZSeHJOCnZyMzk5d0tCZ1FEREdGZXVVODJiZEdhdEFQS0ljbHo5WHV3eWNBZ3cwWk9KZ0xYcDM2b2NCNERHYVBYdUZVTnEKUEwzZVJjc25XSkcrYndqbFRDdmU4YkVVdjBSbHZ0azNMUnZWWG8vdEN6aisvTC9BWE94VFlmNXdrZ204RklhLwo5N3Uzb3Z6VDU0anZBb05ZcXNVbzh2ZE11NDd0S2xvU0JIanQ1ZitwQkhNSm9KaFJQTThNSEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubedb/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs: ["get"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "delete", "get", "list", "patch", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - authorization.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - "pods/exec"
  verbs: ["create"]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: ["use"]
  resourceNames:
  - kubedb
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - stash.appscode.com
  resources:
  - restoresessions
  - restorebatches
  verbs: ["get", "list", "watch"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
# Source: kubedb/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
# Source: kubedb/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
# Source: kubedb/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
# Source: kubedb/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubedb-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
# Source: kubedb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubedb
  namespace: default
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
---
# Source: kubedb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedb
  namespace: default
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb
      app.kubernetes.io/instance: kubedb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb
        app.kubernetes.io/instance: kubedb
      annotations:
        checksum/apiregistration.yaml: 17b86c9a8059f7ab6455b984219700c2de62f07d638c637057ff721b2f5f1c86
    spec:
      serviceAccountName: kubedb
      containers:
      - name: operator
        securityContext:
          {}
        image: kubedb/operator:v0.15.1
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: kubedb/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.validators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubedb.com
  version: v1alpha1
  service:
    namespace: default
    name: kubedb
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRS0tTbGZWaTJxZVdUWTk4d3FMUGpmakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURFeE1UVXlNekV3TXpsYUZ3MHpNREV4TVRNeU16RXdNemxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEzRG1xCnJkU2FMVnZDaVI2U0dic2VDV2psL1YvRUpibTF3YzVrUHVlanZVVTFlUG1scGExNjRmajhoQ0QzU0tnd1J3djgKZVluV2U0ZUgzKzBSNGVmaldEcUpQdE9qTlNFMzdqd0gxUmZMNTBERTVDYlJ6OVRNL3JLY0lUWnRReENuaFVlcgpRRnAyM1ptZXN4emUwd3RFaUhTY3ZDN2xuRjdsVmlFbTNDR21JSWdTOXlqMGVOZitCMEFtTTAvNmMyckdkL3VCCmFhZUFmSEt5dlptcGp5RHVYLy9tekZwdWlPYlF0TDF5L1l4NGJTMHN0a3d2TzVydExoR0xHOW1jdzVxVGlpK2kKUUk1R0FtemRrNkRpQy9kZGxHN3YwNFRLMEJLK25KbWZuV0lKazVKcU1kOEdsdXM1NlZNT3IwemNoVXp5bGtxMgp4dTJGMTdaL3pLSGlBQ0tpM3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQURuTXJvL3hsNVdiblpPamptNk9PcUF5NVd1R2grMkFlMmwrM2d6Mkt6L2hoN2VVblBrTQpTcmNZWkZ6TDIzc2oxVHhpMDFPSW5yS1A1Y1hBNUdkMHV3MW53eEpmaG13VGNQTlJIbnZtMEFYSm1iY1RiTjVKCjFQNm5jbHVJWmlhbHROZFdOam4vSzdlWmNUeUIvc3VJendxNFZZZks5ZGtsT3ZuZ3hFWDJuSFlIR1lMRG9LMWwKb055REtmUDNEU0N6b0ZndzRkNmozeW1QMkQ0MHI1Vk42YVZsM3haRDI2VnUwZTBhdTE0SDNTNXJmaXVIQkNqMwpKRmJIMVRkSElLRW1JYnUvUi81R2MvZ0xJM3g3dG4rbGVvZVYxeUNNRFJ5ZHRsdm9lNDJXTGZrTGZ0TThDVlUyCmVmYVpOQmVFdEZkdUpMU3AyTS9KMmhoVjJiclpVTTNjZUp3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubedb.com
  version: v1alpha1
  service:
    namespace: default
    name: kubedb
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRS0tTbGZWaTJxZVdUWTk4d3FMUGpmakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURFeE1UVXlNekV3TXpsYUZ3MHpNREV4TVRNeU16RXdNemxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEzRG1xCnJkU2FMVnZDaVI2U0dic2VDV2psL1YvRUpibTF3YzVrUHVlanZVVTFlUG1scGExNjRmajhoQ0QzU0tnd1J3djgKZVluV2U0ZUgzKzBSNGVmaldEcUpQdE9qTlNFMzdqd0gxUmZMNTBERTVDYlJ6OVRNL3JLY0lUWnRReENuaFVlcgpRRnAyM1ptZXN4emUwd3RFaUhTY3ZDN2xuRjdsVmlFbTNDR21JSWdTOXlqMGVOZitCMEFtTTAvNmMyckdkL3VCCmFhZUFmSEt5dlptcGp5RHVYLy9tekZwdWlPYlF0TDF5L1l4NGJTMHN0a3d2TzVydExoR0xHOW1jdzVxVGlpK2kKUUk1R0FtemRrNkRpQy9kZGxHN3YwNFRLMEJLK25KbWZuV0lKazVKcU1kOEdsdXM1NlZNT3IwemNoVXp5bGtxMgp4dTJGMTdaL3pLSGlBQ0tpM3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQURuTXJvL3hsNVdiblpPamptNk9PcUF5NVd1R2grMkFlMmwrM2d6Mkt6L2hoN2VVblBrTQpTcmNZWkZ6TDIzc2oxVHhpMDFPSW5yS1A1Y1hBNUdkMHV3MW53eEpmaG13VGNQTlJIbnZtMEFYSm1iY1RiTjVKCjFQNm5jbHVJWmlhbHROZFdOam4vSzdlWmNUeUIvc3VJendxNFZZZks5ZGtsT3ZuZ3hFWDJuSFlIR1lMRG9LMWwKb055REtmUDNEU0N6b0ZndzRkNmozeW1QMkQ0MHI1Vk42YVZsM3haRDI2VnUwZTBhdTE0SDNTNXJmaXVIQkNqMwpKRmJIMVRkSElLRW1JYnUvUi81R2MvZ0xJM3g3dG4rbGVvZVYxeUNNRFJ5ZHRsdm9lNDJXTGZrTGZ0TThDVlUyCmVmYVpOQmVFdEZkdUpMU3AyTS9KMmhoVjJiclpVTTNjZUp3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kube-system
---
# Source: kubedb/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kubedb-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      serviceAccountName: kubedb
      containers:
      - name: busybox
        image: appscode/kubectl:v1.16
        command:
          - sh
          - -c
          - "sleep 2; \
             kubectl delete validatingwebhookconfigurations validators.kubedb.com || true; \
             kubectl delete mutatingwebhookconfiguration mutators.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.mutators.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.validators.kubedb.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
---
# Source: kubedb/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearches
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/postgreses
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: perconaxtradb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/perconaxtradbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["perconaxtradbs"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/redises
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/memcacheds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/etcds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: pgbouncer.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/pgbouncers
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["pgbouncers"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
- name: proxysql.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/proxysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["proxysqls"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
  sideEffects: None
---
# Source: kubedb/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubedb.com
  labels:
    helm.sh/chart: kubedb-v0.15.1
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/version: "v0.15.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearches
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/postgreses
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: perconaxtradb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/perconaxtradbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["perconaxtradbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mongodbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/redises
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/memcacheds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/etcds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: pgbouncer.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/pgbouncers
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["pgbouncers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: proxysql.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/proxysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["proxysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
  sideEffects: None
- name: namespace.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/namespaces
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces"]
    operations: ["DELETE"]
  failurePolicy: Fail
  sideEffects: None
