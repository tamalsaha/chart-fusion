apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.15.1
    helm.sh/chart: kubedb-v0.15.1
  name: kubedb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubedb
      app.kubernetes.io/name: kubedb
  template:
    metadata:
      annotations:
        checksum/apiregistration.yaml: 17b86c9a8059f7ab6455b984219700c2de62f07d638c637057ff721b2f5f1c86
      labels:
        app.kubernetes.io/instance: kubedb
        app.kubernetes.io/name: kubedb
    spec:
      containers:
      - args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: kubedb/operator:v0.15.1
        imagePullPolicy: IfNotPresent
        name: operator
        ports:
        - containerPort: 8443
          name: operator
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
      securityContext: {}
      serviceAccountName: kubedb
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-apiserver-cert
